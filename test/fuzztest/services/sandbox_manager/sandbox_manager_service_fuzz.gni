# Copyright (c) 2024 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("../../../../sandbox_manager.gni")

sandbox_manager_include_dirs = [
  "${sandbox_manager_path}/frameworks/common/include",
  "${sandbox_manager_path}/frameworks/sandbox_manager/include",
  "${sandbox_manager_path}/interfaces/inner_api/sandbox_manager/include",
  "${sandbox_manager_path}/services/common/database/include",
  "${sandbox_manager_path}/services/common/utils",
  "${sandbox_manager_path}/services/sandbox_manager/main/cpp/include/database",
  "${sandbox_manager_path}/services/sandbox_manager/main/cpp/include/sensitive",
  "${sandbox_manager_path}/services/sandbox_manager/main/cpp/include/service",
  "${sandbox_manager_path}/services/sandbox_manager/main/cpp/include/mac",
  "${sandbox_manager_path}/services/sandbox_manager/main/cpp/include/media",
  "../../mock/",
  "../../../common/",
]

sandbox_manager_sources = [
  "${sandbox_manager_path}/services/common/database/src/generic_values.cpp",
  "${sandbox_manager_path}/services/common/database/src/variant_value.cpp",
  "${sandbox_manager_path}/services/common/utils/data_size_report_adapter.cpp",
  "${sandbox_manager_path}/services/sandbox_manager/main/cpp/src/database/policy_field_const.cpp",
  "${sandbox_manager_path}/services/sandbox_manager/main/cpp/src/database/sandbox_manager_rdb.cpp",
  "${sandbox_manager_path}/services/sandbox_manager/main/cpp/src/database/sandbox_manager_rdb_open_callback.cpp",
  "${sandbox_manager_path}/services/sandbox_manager/main/cpp/src/database/sandbox_manager_rdb_utils.cpp",
  "${sandbox_manager_path}/services/sandbox_manager/main/cpp/src/mac/mac_adapter.cpp",
  "${sandbox_manager_path}/services/sandbox_manager/main/cpp/src/media/media_path_support.cpp",
  "${sandbox_manager_path}/services/sandbox_manager/main/cpp/src/sensitive/sandbox_manager_event_subscriber.cpp",
  "${sandbox_manager_path}/services/sandbox_manager/main/cpp/src/service/policy_info_manager.cpp",
  "${sandbox_manager_path}/services/sandbox_manager/main/cpp/src/service/policy_trie.cpp",
  "${sandbox_manager_path}/services/sandbox_manager/main/cpp/src/service/sandbox_manager_service.cpp",
  "${sandbox_manager_path}/test/fuzztest/common/alloc_token.cpp",
  "${sandbox_manager_path}/test/fuzztest/common/fuzz_common.cpp",
]

sandbox_manager_deps = [
  "${sandbox_manager_path}/frameworks/inner_api/sandbox_manager:libsandbox_manager_sdk",
  "${sandbox_manager_path}/frameworks/sandbox_manager:sandbox_manager_communication_adapter_cxx",
  "${sandbox_manager_path}/frameworks/sandbox_manager:sandbox_manager_stub",
  "${sandbox_manager_path}/services/common:sandbox_manager_service_common",
  "${sandbox_manager_path}/services/sandbox_manager:sandbox_manager_service",
]

sandbox_manager_external_deps = [
  "ability_base:want",
  "access_token:libaccesstoken_sdk",
  "access_token:libnativetoken",
  "access_token:libtoken_setproc",
  "cJSON:cjson",
  "c_utils:utils",
  "common_event_service:cesfwk_core",
  "common_event_service:cesfwk_innerkits",
  "config_policy:configpolicy_util",
  "data_share:datashare_consumer",
  "hilog:libhilog",
  "hisysevent:libhisysevent",
  "ipc:ipc_core",
  "media_library:media_library_extend_manager",
  "os_account:os_account_innerkits",
  "relational_store:native_rdb",
  "safwk:system_ability_fwk",
  "samgr:samgr_proxy",
]
